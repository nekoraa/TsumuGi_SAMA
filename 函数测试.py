import math
import random
import threading
import time

def 模拟摆头动作(
    头部角度列表,
    最小角度=-30,
    最大角度=30,
    帧率=120,
    最大速度=2.0,  # 最大*可能*角度变化速率 (作为最大值)
    最小速度=1.0,  # 最小角度变化速率
    加速度系数=0.1,  # 加速度
    减速度系数=0.3,  # 减速度
    最大停顿时间=5.0,
    停顿角度阈值=10.0,  # 增大停顿角度阈值
    减速时长=1.5, # 延长减速时长
):
    if not isinstance(头部角度列表, list):
        raise TypeError("传入的头部角度列表必须是列表类型")
    if 最小速度 >= 最大速度:
        raise ValueError("最小速度必须小于最大速度")

    时间步长 = 1.0 / 帧率
    当前角度 = (最小角度 + 最大角度) / 2
    方向 = 1  # 初始方向向右
    当前速度 = 0  # 初始速度为0
    时间计数 = 0
    当前最大速度 = 最大速度 # 初始最大速度

    正在减速 = False
    减速开始时间 = 0
    减速初始角度 = 0
    减速目标角度 = 0

    已离开临界区 = True  # 初始允许进入极限

    print(f"▶ 开始模拟摆头：范围 {最小角度}° ~ {最大角度}°，帧率 {帧率} FPS，速度范围 {最小速度}°/s ~ {最大速度}°/s\n")

    while True:
        当前时间 = 时间计数

        if 正在减速:
            # 减速逻辑：逐步减少速度，直到停止
            当前速度 -= 减速度系数  # 每帧减少速度
            if 当前速度 < 0:
                当前速度 = 0  # 速度不能为负

            t = (当前时间 - 减速开始时间) / 减速时长
            if t >= 1.0:
                当前角度 = 减速目标角度
                当前速度 = 0  # 停止时速度归零
                正在减速 = False
                停顿时间 = random.uniform(0.1, 最大停顿时间)
                #print(f"🛑 到达极限角度 {当前角度:.2f}°，暂停 {停顿时间:.2f}s")
                time.sleep(停顿时间)

                # 切换方向
                方向 *= -1
                已离开临界区 = False
                当前最大速度 = random.uniform(最小速度, 最大速度) # 切换方向后，随机新的最大速度
                #print(f"🔄 切换方向，新的最大速度：{当前最大速度:.2f}°/s")

            else:
                缓动t = 1 - pow(1 - t, 3)  # ease-out cubic
                当前角度 = 减速初始角度 + (减速目标角度 - 减速初始角度) * 缓动t
                #print(f"◀ 减速中... 角度: {当前角度:.2f}°，速度: {当前速度:.2f}°/s，目标: {减速目标角度:.2f}°，当前最大速度: {当前最大速度:.2f}°/s")
        else:
            # 加速过程
            if 当前速度 < 当前最大速度: # 使用当前turn的最大速度
                当前速度 += 加速度系数
                当前速度 = min(当前速度, 当前最大速度) # 限制速度不超过当前最大速度


            # 计算目标角度（当前方向的极限值）
            目标极限角度 = 最大角度 if 方向 > 0 else 最小角度
            差值 = 目标极限角度 - 当前角度
            步进 = max(-当前速度, min(差值, 当前速度))  # 控制当前速度大小

            当前角度 += 步进

            # 检查是否靠近极限（用于触发减速）
            if abs(差值) < 停顿角度阈值 and 已离开临界区:
                正在减速 = True
                减速开始时间 = 当前时间
                减速初始角度 = 当前角度
                减速目标角度 = 目标极限角度
                #print(f"⚠️ 开始减速... 当前角度: {当前角度:.2f}°，目标角度: {减速目标角度:.2f}°，当前最大速度: {当前最大速度:.2f}°/s")
            elif abs(差值) >= 停顿角度阈值:
                已离开临界区 = True
                #print(f"▶ 加速中... 角度: {当前角度:.2f}°，速度: {当前速度:.2f}°/s，目标: {目标极限角度:.2f}°，当前最大速度: {当前最大速度:.2f}°/s")


        头部角度列表[0] = 当前角度
        # print(f"当前角度：{当前角度:.2f}°，当前速度：{当前速度:.2f}°/s") #  简化加速过程打印，减速过程打印更详细

        时间计数 += 时间步长
        time.sleep(时间步长)

# ===== 测试代码 =====
if __name__ == "__main__":
    头部角度 = [0.0]

    动画线程 = threading.Thread(
        target=模拟摆头动作,
        args=(头部角度,),
        kwargs={
            "最小角度": -30,
            "最大角度": 30,
            "帧率": 60,
            "最大速度": 3.0,  # 最大角度变化速率
            "最小速度": 0.5, # 最小角度变化速率
            "加速度系数": 0.05,  # 加速度
            "减速度系数": 0.2,  # 增大减速度系数
            "最大停顿时间": 0.6,
            "停顿角度阈值": 10.0, # 增大停顿角度阈值
            "减速时长": 0.8, # 延长减速时长
        },
        daemon=True
    )
    动画线程.start()

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\n🛑 模拟已停止。最终角度：", f"{头部角度[0]:.2f}°")